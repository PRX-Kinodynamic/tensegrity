<launch>
    <arg name="img_directory" default="$(env HOME)/Downloads/2025-01-23_16-38-18/"/>
    <arg name="loop" default="false"/>
    <!-- <arg name="frequency" default="15"/> -->
    <arg name="max_images" default="1"/>

    <arg name="sim_clock" default="false"/>
    <arg name="output_dir" default="$(env TENSEGRITY_ROS)/data/test/"/>
    <arg name="filename_prefix" default="test"/>
    <arg name="output_to_file" default="false"/>

    <param name="/use_sim_time" value="$(arg sim_clock)" />
    <node if="$(arg sim_clock)" pkg="tensegrity_utils" type="sim_clock" name="sim_clock" output="screen" />

    <node pkg="interface" type="tensegrity_data_playback.py" name="rgb_imgs"
         output="screen" required="true">
        <param name="directory" value="$(arg img_directory)/" />
        <param name="rgb_topic_name" value="/images/rgb" />
        <param name="depth_topic_name" value="/images/depth" />
        <param name="cable_sensors_topic_name" value="/tensegrity/sensors" />
        <param name="loop" value="$(arg loop)" />
        <param name="filename_prefix" value="$(arg output_dir)/$(arg filename_prefix)" />
        <param name="output_to_file" value="$(arg output_to_file)" />
    </node>

<!--      <node pkg="interface" type="images_to_topic.py" name="rgb_imgs"
         output="screen" required="true">
        <param name="dir" value="$(arg img_directory)/color" />
        <param name="topic_name" value="/images/rgb" />
        <param name="format" value="color" />
        <param name="frequency" value="$(arg frequency)" />
        <param name="loop" value="$(arg loop)" />
    </node>

    <node pkg="interface" type="images_to_topic.py" name="depth_imgs" output="screen">
        <param name="dir" value="$(arg img_directory)/depth" />
        <param name="topic_name" value="/images/depth" />
        <param name="format" value="gray" />
        <param name="frequency" value="$(arg frequency)" />
        <param name="loop" value="$(arg loop)" />
    </node>
 -->
    <include file="$(find interface)/launch/camera_info_publisher.launch">
        <arg name="camera_info_file" default="$(arg img_directory)/camera_info.yaml"/>
    </include>

    <rosparam command="load" ns="camera" file="$(arg img_directory)/camera_info.yaml" />

    <include file="$(find interface)/launch/pose_image_overlay.launch">
        <arg name="rgb_img_topic" value="/images/rgb"/>
        <arg name="topic_overlay" value="/tensegrity/estimation/overlay"/>
        <arg name="topic_endcap_only" value="/tensegrity/estimation/endcaps"/>
        <arg name="topic_tensegrity_bars" value="/tensegrity/poses"/>
        <arg name="max_images" value="$(arg max_images)"/>
        <arg name="camera_info_topic" value="/real_sense/info"/>
        <arg name="rod_mesh_file" default="$(find interface)/models/bars/struct_with_socks.glb"/>
    </include>


</launch>
